name: Build, Push and Deploy 
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - mono-repo-cicd
    paths:
        - "apps/bc-wallet-api-server/**"
        - "packages/bc-wallet-traction-adapter/**"
        - "apps/bc-wallet-showcase-creator/**"
        - "apps/bc-wallet-demo-server/**"
        - "apps/bc-wallet-demo-web/**"
        - "charts/**"

jobs:
  # test_api_server:
  #   name: "Test API Server"
  #   uses: ./.github/workflows/test.yaml
  #   with:
  #     package_name: "credential-showcase-api-server"

  # test_traction_adapter:
  #   name: "Test Traction Adapter"
  #   uses: ./.github/workflows/test.yaml
  #   with:
  #     package_name: "credential-showcase-traction-adapter"

  build_api_server:
    name: "Build API Server"
    runs-on: ubuntu-latest
    needs:
      - ready
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true }}
    steps:
      - uses: actions/checkout@v4
      - name: Build API Server Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./apps/bc-wallet-api-server/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-api-server
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.CR_PAT }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  build_traction_adapter:
    name: "Build Traction Adapter"
    runs-on: ubuntu-latest
    needs:
      - ready
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Traction Adapter Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./packages/bc-wallet-traction-adapter/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-traction-adapter
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.CR_PAT }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  build_showcase_creator:
    name: "Build Showcase Creator"
    runs-on: ubuntu-latest
    needs:
      - ready
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Showcase Creator Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "./apps/bc-wallet-showcase-creator"
          dockerfile: "./apps/bc-wallet-showcase-creator/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-showcase-creator
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.CR_PAT }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  build_demo_server:
    name: "Build Demo Server"
    runs-on: ubuntu-latest
    needs:
      - ready
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Demo Server Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "./apps/bc-wallet-demo-server"
          dockerfile: "./apps/bc-wallet-demo-server/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-demo-server
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.CR_PAT }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  build_demo_web:
    name: "Build Demo Web"
    runs-on: ubuntu-latest
    needs:
      - ready
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true }}
    steps:
      - uses: actions/checkout@v4
      - name: Build Demo Web Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "./apps/bc-wallet-demo-web"
          dockerfile: "./apps/bc-wallet-demo-web/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-demo-web
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.CR_PAT }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}


  



  deploy_dev:
    name: Deploy to Development
    environment: development
    runs-on: ubuntu-latest
    needs:
      - build_api_server
      - build_traction_adapter
    if: ${{ contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_NAMESPACE }}
     
      - name: Deploy to OpenShift with Helm
        run: |
          cd charts/credential-showcase
          
          helm dependency update
          helm upgrade --install credential-showcase \
            --namespace ${{ secrets.OPENSHIFT_NAMESPACE }} -f ./values.yaml --set api_server.image.tag=${{ needs.build_api_server.outputs.image_tag }} --set traction_adapter.image.tag=${{ needs.build_traction_adapter.outputs.image_tag }} . --wait
      
      - name: Restart Deployments
        run: |
          oc rollout restart deployment/credential-showcase-credential-showcase-api-server
          oc rollout restart deployment/credential-showcase-credential-showcase-traction-adapter

  # deploy_uat:
  #   name: Deploy to UAT
  #   environment: uat  # This creates a manual approval gate
  #   runs-on: ubuntu-latest
  #   needs: deploy_dev
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install OpenShift CLI tools
  #       uses: redhat-actions/openshift-tools-installer@v1
  #       with:
  #         oc: "4.14"

  #     - name: Authenticate and set context
  #       uses: redhat-actions/oc-login@v1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
  #         openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
  #         certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
  #         namespace: ${{ secrets.OPENSHIFT_UAT_NAMESPACE }}
     
  #     - name: Deploy to OpenShift with Helm
  #       run: |
  #         cd charts/credential-showcase
          
  #         helm dependency update
  #         helm upgrade --install credential-showcase \
  #           --namespace ${{ secrets.OPENSHIFT_UAT_NAMESPACE }} -f ./values.yaml -f ./values-uat.yaml --set api_server.image.tag=${{ needs.build_api_server.outputs.image_tag }} --set traction_adapter.image.tag=${{ needs.build_traction_adapter.outputs.image_tag }} . --wait
      
  #     - name: Restart Deployments
  #       run: |
  #         oc rollout restart deployment/credential-showcase-credential-showcase-api-server
  #         oc rollout restart deployment/credential-showcase-credential-showcase-traction-adapter

  # deploy_prod:
  #   name: Deploy to Production
  #   environment: production  # This creates a manual approval gate
  #   runs-on: ubuntu-latest
  #   needs: deploy_uat
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Install OpenShift CLI tools
  #       uses: redhat-actions/openshift-tools-installer@v1
  #       with:
  #         oc: "4.14"

  #     - name: Authenticate and set context
  #       uses: redhat-actions/oc-login@v1
  #       with:
  #         openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
  #         openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
  #         certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
  #         namespace: ${{ secrets.OPENSHIFT_PROD_NAMESPACE }}
     
  #     - name: Deploy to OpenShift with Helm
  #       run: |
  #         cd charts/credential-showcase
          
  #         helm dependency update
  #         helm upgrade --install credential-showcase \
  #           --namespace ${{ secrets.OPENSHIFT_PROD_NAMESPACE }} -f ./values.yaml -f ./values-prod.yaml --set api_server.image.tag=${{ needs.build_api_server.outputs.image_tag }} --set traction_adapter.image.tag=${{ needs.build_traction_adapter.outputs.image_tag }} . --wait
      
  #     - name: Restart Deployments
  #       run: |
  #         oc rollout restart deployment/credential-showcase-credential-showcase-api-server
  #         oc rollout restart deployment/credential-showcase-credential-showcase-traction-adapter





  image-scan:
    name: "Image Scan"
    needs: [build_api_server, build_traction_adapter, build_showcase_creator, build_demo_server, build_demo_web, ready]
    runs-on: ubuntu-latest
    if: ${{ always() && fromJSON(needs.ready.outputs.deploy) == true && !(contains(needs.*.result, 'failure')) }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Scan API Server Docker Image
        uses: ./.github/actions/trivy-scan
        with:
          scan-type: 'image'
          scan-ref: 'ghcr.io/${{ github.repository_owner }}/bc-wallet-api-server:${{ needs.build_api_server.outputs.image_tag }}'
          scan-title: 'Docker Image Scan Results for bc-wallet-api-server'
      - name: Scan Traction Adapter Docker Image
        uses: ./.github/actions/trivy-scan
        with:
          scan-type: 'image'
          scan-ref: 'ghcr.io/${{ github.repository_owner }}/bc-wallet-traction-adapter:${{ needs.build_traction_adapter.outputs.image_tag }}'
          scan-title: 'Docker Image Scan Results for bc-wallet-traction-adapter'
      # - name: Scan API Server Docker Image
      #   uses: ./.github/actions/trivy-scan
      #   with:
      #     scan-type: 'image'
      #     scan-ref: 'ghcr.io/${{ github.repository_owner }}/bc-wallet-demo-web:${{ needs.build_demo_web.outputs.image_tag }}'
      #     scan-title: 'Docker Image Scan Results for bc-wallet-demo-web'
      # - name: Scan Traction Adapter Docker Image
      #   uses: ./.github/actions/trivy-scan
      #   with:
      #     scan-type: 'image'
      #     scan-ref: 'ghcr.io/${{ github.repository_owner }}/bc-wallet-showcase-creator:${{ needs.build_showcase_creator.outputs.image_tag }}'
      #     scan-title: 'Docker Image Scan Results for bc-wallet-showcase-creator'
      # - name: Scan Demo Server Docker Image
      #   uses: ./.github/actions/trivy-scan
      #   with:
      #     scan-type: 'image'
      #     scan-ref: 'ghcr.io/${{ github.repository_owner }}/bc-wallet-demo-server:${{ needs.build_demo_server.outputs.image_tag }}'
      #     scan-title: 'Docker Image Scan Results for bc-wallet-demo-server'